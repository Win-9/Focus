name: Java CI with Gradle

on:
  push:
    branches: [ "dev2" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: JDK 17세팅
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'


      - name: properties 설정
        run: |
          mkdir -p ./src/main/resources/env
          touch ./src/main/resources/env/mysql.yml
          touch ./src/main/resources/env/port.yml
          touch ./src/main/resources/env/image.yml
          touch ./src/main/resources/env/redis.yml

          printf "%s" "${{ secrets.MYSQL}}" > ./src/main/resources/env/mysql.yml
          printf "%s" "${{ secrets.SERVICE_PORT_TEST}}" > ./src/main/resources/env/port.yml
          printf "%s" "${{ secrets.IMAGE_TEST}}" > ./src/main/resources/env/image.yml
          printf "%s" "${{ secrets.REDIS}}" > ./src/main/resources/env/redis.yml

      - name: gradlew 권한 설정
        run: |
          chmod +x ./gradlew

      - name: 빌드
        run: |
          ./gradlew clean build -x test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Install Docker Compose
        run: |
          sudo apt-get install -y docker-compose

      - name: 확인용 디버그 명령어
        run: |
          pwd
          ls -al

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 원격 서버에서 애플리케이션 실행
        uses: appleboy/ssh-action@v1.0.3
        with:
          debug: true
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER_NAME }}
          password: ${{ secrets.PASS_WORD }}
          port: ${{ secrets.PORT }}
          timeout: 70s
          proxy_timeout: 70s
          command_timeout: 120s
          script: |
            cd ${{ secrets.REMOTE_DIRECTORY }}
            docker-compose -p test -f docker-compose.test.yml down
            docker-compose -p test -f docker-compose.test.yml up -d